[{"C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\index.js":"1","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\reportWebVitals.js":"2","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\App.js":"3","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\Banner.js":"4","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\Copyright.js":"5","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\Navigation.js":"6","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\Tasks.js":"7","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\Form.js":"8","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\Teams.js":"9","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\Edit.js":"10","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\TeamForm.js":"11","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\TaskInTeam.js":"12","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\FilterBar.js":"13"},{"size":718,"mtime":1628702390000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1628702390000,"results":"16","hashOfConfig":"15"},{"size":1141,"mtime":1628702390000,"results":"17","hashOfConfig":"15"},{"size":1060,"mtime":1628702390000,"results":"18","hashOfConfig":"15"},{"size":214,"mtime":1628702390000,"results":"19","hashOfConfig":"15"},{"size":746,"mtime":1628702390000,"results":"20","hashOfConfig":"15"},{"size":8157,"mtime":1628702390000,"results":"21","hashOfConfig":"15"},{"size":3871,"mtime":1628702390000,"results":"22","hashOfConfig":"15"},{"size":19572,"mtime":1628763472660,"results":"23","hashOfConfig":"15"},{"size":5073,"mtime":1628702390000,"results":"24","hashOfConfig":"15"},{"size":6530,"mtime":1628760809315,"results":"25","hashOfConfig":"15"},{"size":1294,"mtime":1628702390000,"results":"26","hashOfConfig":"15"},{"size":3765,"mtime":1628702390000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"4lbn4w",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\index.js",[],["61","62"],"C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\reportWebVitals.js",[],"C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\App.js",["63"],"import logo from './logo.svg';\nimport './Styles/utilities.css';\nimport Navigation from './Components/Navigation'\nimport Banner from './Components/Banner'\nimport Copyright from './Components/Copyright'\nimport Tasks from './Components/Tasks'\nimport Form from './Components/Form'\nimport Edit from './Components/Edit'\nimport Teams from './Components/Teams'\nimport TeamForm from './Components/TeamForm'\nimport TaskInTeam from './Components/TaskInTeam'\n//import ApolloClient from 'apollo-boost';\n//import { ApolloProvider } from 'react-apollo';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\n\n\nfunction App() {\n  return (\n    \n    <Router>\n    <>\n      <Navigation/>\n      <Switch>\n      <Route path=\"/\" exact component={Banner} />\n      <Route path=\"/tasks\" component={Tasks}/>\n      <Route path=\"/form\" component={Form}/>\n      <Route path='/edit/:id' component={Edit}/>\n      <Route path=\"/teams\" component={Teams}/>\n      <Route path=\"/teamform\" component={TeamForm}/>\n      <Route path=\"/taskinteam\" component={TaskInTeam} />\n      </Switch>\n      <Copyright/>\n    </>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\Banner.js",[],"C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\Copyright.js",[],"C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\Navigation.js",[],"C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\Tasks.js",["64","65","66","67","68","69"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n//import './App.css';\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport Flag from '../Assets/flag.png'\nimport '../Styles/tasks.css'\nimport FilterBar from './FilterBar';\nimport moment from 'moment'\n\nconst GET_TASKS = gql`\n  {\n    tasks {\n      _id\n      Name\n      domain\n      task\n      description\n      deadline\n      isComplete\n    }\n  }\n`;\n\nconst DELETE_TASK = gql`\n  mutation removeTask($id: String!) {\n    removeTask(id:$id) {\n      _id\n    }\n  }\n`;\nconst COMPLETE_TASK = gql`\n  mutation completeTask($id: String!, $isComplete:Boolean!) {\n    completeTask(id:$id, isComplete:$isComplete) {\n      _id\n      isComplete\n    }\n  }\n`;\n\n// console.log(GET_TASKS)\n\n\n// console.log(colors[Math.floor(Math.random() * colors.length)])\n\n\nconst Tasks = () => {\n  \n  \n    function randomColor(){\n      const colors = ['#e5a7e1','#a7d6e5','#cae5a7','#e5dfA7']\n        return colors[Math.floor(Math.random() * colors.length)]\n      }\n      \n    function len(task){\n      return `${task.length + 2}ch`\n      }\n\n    const  markAsComplete = (e)=>{\n      if (e.target.style.fill != '#6EFF3A'){\n        e.target.style.fill = '#6EFF3A'\n      }\n    }  \n\n    const deleteTask = (e) => {\n      e.nativeEvent.path[5].style.display = 'none'\n      console.log(e)\n    }\n\n    \n    \n\n\n\n    return (\n    \n        <Query pollInterval={500} query={GET_TASKS}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...';\n          if (error) return `Error! ${error.message}`;\n          \n\n          const renderAuthButton = (abc) => {\n            if (abc==true) {\n              return <svg\n              className=\"completedOption1\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"#6EFF3A\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              >\n              <path\n                d=\"M12 0C5.373 0 0 5.373 0 12C0 18.627 5.373 24 12 24C18.627 24 24 18.627 24 12C24 5.373 18.627 0 12 0ZM10.75 17.292L6.25 12.928L8.107 11.07L10.75 13.576L16.393 7.792L18.25 9.649L10.75 17.292Z\"\n              />\n            </svg>;\n            } else {\n              return <svg\n              className=\"completedOption2\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"#808080\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              >\n              <path \n                d=\"M12 0C5.373 0 0 5.373 0 12C0 18.627 5.373 24 12 24C18.627 24 24 18.627 24 12C24 5.373 18.627 0 12 0ZM10.75 17.292L6.25 12.928L8.107 11.07L10.75 13.576L16.393 7.792L18.25 9.649L10.75 17.292Z\"\n              />\n            </svg>;\n            }\n          }\n    \n          return (\n            <div className=\"tasks\">\n            <h2 className=\"heading\">Tasks</h2>\n            <div className=\"search-bar\">{<FilterBar></FilterBar>}</div>\n            <div className=\"lists\">\n                {data.tasks.map((task,{col = randomColor()}) => (\n                  \n                <div className=\"item\" id={task._id} key={task._id} data-status ={task.isComplete} >\n                  <div className=\"top-section\">\n                    <h5 className=\"tagline\" style={{color:`${col}`,backgroundColor:`${col}22`, width:`${len(task.task)}`}}>{task.task}</h5>\n                    <div className=\"options\">\n              <div className=\"edit\">\n              <Link to={`/edit/${task._id}`} className=\"btn btn-success\"> <svg\n                  className=\"editOption\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <g clipPath=\"url(#clip0)\">\n                    <path\n                      d=\"M19.769 9.923L7.127 22.562L0 24L1.438 16.872L14.079 4.232L19.769 9.923V9.923ZM21.183 8.509L24 5.689L18.309 0L15.493 2.817L21.183 8.509V8.509Z\"\n                      fill=\"#bac8df\"\n                    />\n                  </g>\n                  <defs>\n                    <clipPath id=\"clip0\">\n                      <rect width=\"24\" height=\"24\" fill=\"white\" />\n                    </clipPath>\n                  </defs>\n                </svg></Link>&nbsp;\n                \n              </div>\n              <div className=\"completed\">\n              <Mutation mutation={COMPLETE_TASK} key={task._id} >\n                                    {(completeTask, { loading, error }) => (\n                                        <div>\n                                            <form\n                                                onSubmit={e => {\n                                                    e.preventDefault();\n                                                    completeTask({ variables: { id: task._id, isComplete:true } });\n                                                }}>\n                                                <button type=\"submit\" style={{background:'none',outline:'none',border:'none'}}>{renderAuthButton(task.isComplete)}</button>\n                                            </form>\n                                        </div>\n                                    )}\n                                </Mutation>\n              </div>\n              <div className=\"delete\">\n              <Mutation mutation={DELETE_TASK} key={task._id} >\n                                    {(removeTask, { loading, error }) => (\n                                        <div>\n                                            <form\n                                                onSubmit={e => {\n                                                    e.preventDefault();\n                                                    removeTask({ variables: { id: task._id } });\n                                                }}>\n                                                <button style={{background:'none',outline:'none',border:'none'}}  image url=\"http://www.w3.org/2000/svg\" type=\"submit\"><svg className=\"deleteOption\"\n                                                width=\"24\"\n                                                height=\"24\"\n                                                viewBox=\"0 0 24 24\"\n                                                fill=\"none\"\n                                                xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 0C5.373 0 0 5.373 0 12C0 18.627 5.373 24 12 24C18.627 24 24 18.627 24 12C24 5.373 18.627 0 12 0ZM16.151 17.943L12.008 13.841L7.891 18L6.058 16.167L10.162 12.01L6 7.891L7.833 6.058L11.988 10.16L16.094 6L17.943 7.849L13.843 11.99L18 16.094L16.151 17.943Z\" fill=\"#FF3A3A\"/>\n                </svg></button>\n                                            </form>\n                                        \n                                        </div>\n                                    )}\n                                </Mutation>\n                \n              </div>\n            </div>\n                  </div>\n                    <h5 className=\"description\">{task.description}</h5>\n                    <div className=\"bottom-section\">\n                        <div className=\"duration\">\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M4 24H2V0H4V24ZM22 2.613C22 2.613 20.379 4.043 18.246 4.043C14.886 4.043 14.81 1.148 10.909 1.148C8.801 1.148 6.834 2.128 6 2.842V14.927C7.184 14.108 8.979 13.246 10.923 13.246C14.607 13.246 15.124 16 18.407 16C20.529 16 22 14.641 22 14.641V2.613V2.613Z\" fill=\"#BAC8DF\"/>\n</svg>\n                            <h5 className=\"date\">{moment(task.deadline).format(\"DD-MM-YYYY\")}</h5>\n                        </div>\n                        <div className=\"profile\">\n                            <h5 className=\"name\">{task.Name}</h5>\n                            <p className=\"domain\">{task.domain}</p>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n      </div>\n          );\n        }}\n      </Query>\n    )\n}\n\nexport default Tasks\n\n/*style={{background:'none',outline:'none',border:'none'}}*/","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\Form.js",["70"],"import React, { Component } from 'react';\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport { Link } from 'react-router-dom';\nimport '../Styles/form.css'\n\n\nconst ADD_TASK = gql`\n    mutation AddTask(\n        $Name: String!,\n        $domain: String!,\n        $task: String!,\n        $description: String!,\n        $deadline: Date!,\n        $isComplete:Boolean!,) {\n        addTask(\n            Name: $Name,\n            domain: $domain,\n            task: $task,\n            description: $description,\n            deadline: $deadline,\n            isComplete:$isComplete\n           ) {\n            _id\n        }\n    }\n`;\nclass Create extends Component {\n\n  \n  render() {\n    const scrollHeight = (e)=>{ \n      const textarea = document.querySelector(\n        \".container .form .input-container textarea\")\n          // textarea.style.height = \"auto\";\n          textarea.style.height = textarea.scrollHeight + \"px\";\n    } \n    let Name, domain, task, description,deadline;\n      return (\n        <Mutation mutation={ADD_TASK} onCompleted={() => this.props.history.push('/tasks')}>\n            {(addTask, { loading, error }) => (\n                <div className=\"container\">\n      <h4 className=\"heading\">Assing Task</h4>\n      <form className=\"form\" onSubmit={e => {\n                                e.preventDefault();\n                                addTask({ variables: {Name: Name.value, domain: domain.value, task: task.value, description: description.value, deadline: deadline.value, isComplete:false } });\n                                Name.value = \"\";\n                                domain.value = \"\";\n                                task.value = \"\";\n                                description.value = \"\";\n                                deadline.value = null;\n                               \n                            }}>\n        <div className=\"row-1\">\n          <div className=\"input-container\">\n            <input id=\"Name\" type=\"text\" ref={node => {Name = node;}} placeholder=\"Name\" required />\n          </div>\n          <div class=\"input-container\" >\n            <select name=\"Domain\" id=\"domain\" ref={node => {domain = node;}} required>\n              <option value=\"Website\">Website</option>\n              <option value=\"Android\">Android</option>\n              <option value=\"Multimedia\">Multimedia</option>\n              <option value=\"Flutter\">Flutter</option>\n              <option value=\"Content\">Content</option>\n              <option value=\"Management\">Management</option>\n            </select>\n          </div>\n          {/* <div className=\"input-container\">\n            <input id=\"domain\" type=\"text\" ref={node => {domain = node;}} placeholder=\"Domain\" required />\n          </div> */}\n        </div>\n        <div className=\"input-container\">\n          <input id=\"task\" type=\"text\" ref={node => {task = node;}} placeholder=\"Task\" required />\n        </div>\n        <div className=\"input-container\">\n        <textarea onChange = {scrollHeight} placeholder=\"Description\" id=\"description\" ref={node => {description = node;}} required></textarea>\n          {/* <input\n            id=\"description\"\n            type=\"text\"\n            ref={node => {description = node;}}\n            placeholder=\"Description\"\n            required\n          /> */}\n        </div>\n        <div className=\"input-container\">\n          <input\n            id=\"deadline\"\n            type=\"date\"\n            ref={node => {deadline = node;}}\n            placeholder=\"yyyy-mm-dd\"\n            required\n          />\n        </div>\n        \n        <button style={{textDecoration: 'none', border:'none'}} type=\"submit\" className=\"btn\">Assign Task</button>\n      </form>\n      \n      {loading && <p>Loading...</p>}\n      {error && <p>Error :( Please try again</p>}\n    </div>\n            )}\n        </Mutation>\n      );\n    }\n  }\n  \n  export default Create;","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\Teams.js",["71","72","73","74","75","76","77","78","79","80","81"],"C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\Edit.js",["82","83"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\nimport '../Styles/form.css'\nimport moment from 'moment'\n\nconst GET_TASK = gql`\n    query task($taskId: String) {\n        task(id: $taskId) {\n            _id\n            Name\n            domain\n            task\n            description\n            deadline\n        }\n    }\n`;\n\nconst UPDATE_TASK = gql`\n    mutation updateTask(\n        $id: String!,\n        $Name: String!,\n        $domain: String!,\n        $task: String!,\n        $description: String!,\n        $deadline: Date!,\n        ) {\n        updateTask(\n        id: $id,\n        Name: $Name,\n        domain: $domain,\n        task: $task,\n        description: $description,\n        deadline:$deadline) {\n            _id\n        }\n    }\n`;\n\nclass Edit extends Component {\n\n  render() {\n\n    const scrollHeight = (e)=>{ \n      const textarea = document.querySelector(\n        \".container .form .input-container textarea\")\n          // textarea.style.height = \"auto\";\n          textarea.style.height = textarea.scrollHeight + \"px\";\n    } \n    let Name, domain, task, description, deadline;\n    return (\n        <Query query={GET_TASK} variables={{ taskId: this.props.match.params.id }}>\n            {({ loading, error, data }) => {\n                if (loading) return 'Loading...';\n                if (error) return `Error! ${error.message}`;\n        \n                return (\n                    <Mutation mutation={UPDATE_TASK} key={data.task._id} onCompleted={() => this.props.history.push(`/tasks`)}>\n                        {(updateTask, { loading, error }) => (\n                            <div className=\"container\">\n                            <h4 className=\"heading\">Assing Task</h4>\n                            <form className=\"form\" onSubmit={e => {\n                                            e.preventDefault();\n                                            updateTask({ variables: { id: data.task._id, Name: Name.value, domain: domain.value, task: task.value, description: description.value, deadline: deadline.value } });\n                                            Name.value = \"\";\n                                            domain.value = \"\";\n                                            task.value = \"\";\n                                            description.value = \"\";\n                                            deadline.value = null;\n                                            \n                                        }}>\n                              <div className=\"row-1\">\n                                <div className=\"input-container\">\n                                  <input id=\"Name\" type=\"text\" ref={node => {Name = node;}} placeholder=\"Name\" defaultValue={data.task.Name} required />\n                                </div>\n                                <div class=\"input-container\" >\n            <select name=\"Domain\" id=\"domain\" ref={node => {domain = node;}} defaultValue={data.task.domain} required>\n              <option value=\"Website\">Website</option>\n              <option value=\"Android\">Android</option>\n              <option value=\"Multimedia\">Multimedia</option>\n              <option value=\"Flutter\">Flutter</option>\n              <option value=\"Content\">Content</option>\n              <option value=\"Management\">Management</option>\n            </select>\n          </div>\n                              </div>\n                              <div className=\"input-container\">\n                                <input id=\"task\" type=\"text\" ref={node => {task = node;}} placeholder=\"Task\" defaultValue={data.task.task} required />\n                              </div>\n                              <div className=\"input-container\">\n                              <textarea onChange = {scrollHeight} placeholder=\"Description\" id=\"description\" ref={node => {description = node;}} defaultValue={data.task.description} required></textarea>\n                              </div>\n                              <div className=\"input-container\">\n                                <input\n                                  id=\"deadline\"\n                                  type=\"date\"\n                                  ref={node => {deadline = node;}}\n                                  //placeholder=\"Deadline\"\n                                  defaultValue={data.task.deadline}\n                                  required\n                                />\n                              </div>\n                              \n                              <button style={{textDecoration: 'none', border:'none'}} type=\"submit\" className=\"btn\">Assign Task</button>\n                            </form>\n                            \n                            {loading && <p>Loading...</p>}\n                            {error && <p>Error :( Please try again</p>}\n                          </div>\n                        )}\n                    </Mutation>\n                );\n            }}\n        </Query>\n    );\n  }\n}\n\nexport default Edit;","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\TeamForm.js",["84","85","86","87","88","89"],"C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\TaskInTeam.js",["90"],"import React from 'react'\nimport { useState } from 'react'\nimport '../Styles/taskinteam.css'\n\nconst TaskInTeam = () => {\n\n    return (\n        <div className=\"overlay\">\n                <div className=\"container\">\n      <h4 className=\"heading\">Team Name</h4>\n      <form className=\"form\">\n        <div className=\"row-1\">\n          <div className=\"input-container\">\n            <input id=\"name\" type=\"text\" placeholder=\"Name\" required />\n          </div>\n          <div className=\"input-container\">\n            <input id=\"domain\" type=\"text\" placeholder=\"Domain\" required />\n          </div>\n        </div>\n        <div className=\"input-container\">\n          <input id=\"task\" type=\"text\" placeholder=\"Task\" required />\n        </div>\n        <div className=\"input-container\">\n          <input\n            id=\"description\"\n            type=\"text\"\n            placeholder=\"Description\"\n            required\n          />\n        </div>\n        <div className=\"input-container\">\n          <input\n            id=\"date\"\n            type=\"date\"\n            value=\"\"\n            placeholder=\"Deadline\"\n            required\n          />\n        </div>\n      </form>\n      <h4 style={{textDecoration: 'none'}} className=\"btn\">Assign Task</h4>\n      </div>\n        </div>\n    )\n}\n\nexport default TaskInTeam\n","C:\\Users\\nayan\\OneDrive\\Desktop\\task-management-system-main\\src\\Components\\FilterBar.js",["91","92","93","94"],"import React from 'react'\nimport '../Styles/filterbar.css'\n\nconst FilterBar = () => {\n\n    const handleChange = (e) =>{\n        const userInput = e.target.value.toUpperCase()\n        // console.log(e)\n        const tasks = e.nativeEvent.path[4]\n        // console.log(tasks.querySelector('.lists'))\n        const lists = tasks.querySelector('.lists')\n        const items = lists.querySelectorAll('.item')\n        // console.log(items)\n        items.forEach((item) => {\n            const tagline = item.querySelector('.top-section .tagline').innerHTML.toUpperCase()\n            const deadline = item.querySelector('.bottom-section .duration .date').innerHTML.toUpperCase()\n            const name = item.querySelector('.bottom-section .profile .name').innerHTML.toUpperCase()\n            const domain = item.querySelector('.bottom-section .profile .domain').innerHTML.toUpperCase()\n            // console.log(deadline,tagline,name,domain)\n\n            if(tagline.indexOf(userInput) > -1 || deadline.indexOf(userInput) > -1 || name.indexOf(userInput) > -1 ||domain.indexOf(userInput) > -1){\n                item.style.display = \"flex\"\n            }\n            else{\n                item.style.display = \"none\"\n            }\n        })\n    }\n\n    const filter = (e) => {\n        const select = document.querySelector('#filter')\n        const userValue = select.value\n        // console.log(select.value)\n        const tasks = e.nativeEvent.path[4]\n        // console.log(tasks.querySelector('.lists'))\n        const lists = tasks.querySelector('.lists')\n        const items = lists.querySelectorAll('.item')\n        // console.log(items)\n        items.forEach((item) => {\n            item.style.display = 'none'\n            if(userValue == 'Completed'){\n                items.forEach(item => {\n                    if (item.getAttribute('data-status') == 'true'){\n                        item.style.display = 'flex'\n                    }\n                })\n            }\n\n            else if(userValue == 'Pending'){\n                items.forEach(item => {\n                    if (item.getAttribute('data-status') == 'false'){\n                        item.style.display = 'flex'\n                    }\n                })\n            }\n\n            else{\n                items.forEach(item => {\n                    item.style.display = 'flex'\n                })\n            }\n            // console.log(item.getAttribute('data-status'))\n        })\n    } \n    return (\n        <div className=\"filter-container\">\n        <div className=\"search-bar\">\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M23.111 20.058L18.134 15.081C19.099 13.561 19.657 11.759 19.657 9.83C19.657 4.41 15.248 0 9.828 0C4.408 0 0 4.41 0 9.83C0 15.25 4.408 19.66 9.829 19.66C11.663 19.66 13.381 19.155 14.851 18.277L19.872 23.298C22.016 25.439 25.256 22.202 23.111 20.058ZM3.047 9.83C3.047 6.091 6.09 3.048 9.829 3.048C13.568 3.048 16.611 6.09 16.611 9.83C16.611 13.57 13.568 16.612 9.829 16.612C6.09 16.612 3.047 13.569 3.047 9.83V9.83ZM5.057 8.066C7.041 3.467 13.721 4 14.979 8.815C12.445 5.841 7.986 5.521 5.057 8.066Z\"\n              fill=\"#BAC8DF\"\n            />\n          </svg>\n          <input onChange = {handleChange} type=\"text\" id=\"search-bar\" placeholder=\"Search\" />\n        </div>\n        <div className=\"filter-options\">\n          <select id=\"filter\"\n          onChange = {filter} >\n            <option value=\"All\">All</option>\n            <option value=\"Completed\">Completed</option>\n            <option value=\"Pending\">Pending</option>\n          </select>\n        </div>\n      </div>\n    )\n}\n\nexport default FilterBar\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":8,"nodeType":"101","messageId":"102","endLine":1,"endColumn":12},{"ruleId":"99","severity":1,"message":"103","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"104","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":12},{"ruleId":"99","severity":1,"message":"105","line":59,"column":12,"nodeType":"101","messageId":"102","endLine":59,"endColumn":26},{"ruleId":"106","severity":1,"message":"107","line":60,"column":31,"nodeType":"108","messageId":"109","endLine":60,"endColumn":33},{"ruleId":"99","severity":1,"message":"110","line":65,"column":11,"nodeType":"101","messageId":"102","endLine":65,"endColumn":21},{"ruleId":"106","severity":1,"message":"111","line":84,"column":20,"nodeType":"108","messageId":"109","endLine":84,"endColumn":22},{"ruleId":"99","severity":1,"message":"112","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":14},{"ruleId":"99","severity":1,"message":"112","line":3,"column":9,"nodeType":"101","messageId":"102","endLine":3,"endColumn":13},{"ruleId":"99","severity":1,"message":"113","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":15},{"ruleId":"99","severity":1,"message":"114","line":5,"column":17,"nodeType":"101","messageId":"102","endLine":5,"endColumn":25},{"ruleId":"99","severity":1,"message":"115","line":18,"column":7,"nodeType":"101","messageId":"102","endLine":18,"endColumn":16},{"ruleId":"99","severity":1,"message":"116","line":32,"column":7,"nodeType":"101","messageId":"102","endLine":32,"endColumn":18},{"ruleId":"99","severity":1,"message":"117","line":41,"column":7,"nodeType":"101","messageId":"102","endLine":41,"endColumn":19},{"ruleId":"99","severity":1,"message":"118","line":52,"column":7,"nodeType":"101","messageId":"102","endLine":52,"endColumn":13},{"ruleId":"99","severity":1,"message":"119","line":54,"column":20,"nodeType":"101","messageId":"102","endLine":54,"endColumn":28},{"ruleId":"99","severity":1,"message":"105","line":159,"column":14,"nodeType":"101","messageId":"102","endLine":159,"endColumn":28},{"ruleId":"106","severity":1,"message":"107","line":160,"column":33,"nodeType":"108","messageId":"109","endLine":160,"endColumn":35},{"ruleId":"99","severity":1,"message":"110","line":165,"column":13,"nodeType":"101","messageId":"102","endLine":165,"endColumn":23},{"ruleId":"99","severity":1,"message":"112","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":14},{"ruleId":"99","severity":1,"message":"120","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":14},{"ruleId":"99","severity":1,"message":"121","line":28,"column":7,"nodeType":"101","messageId":"102","endLine":28,"endColumn":11},{"ruleId":"99","severity":1,"message":"122","line":28,"column":13,"nodeType":"101","messageId":"102","endLine":28,"endColumn":20},{"ruleId":"99","severity":1,"message":"123","line":28,"column":22,"nodeType":"101","messageId":"102","endLine":28,"endColumn":29},{"ruleId":"99","severity":1,"message":"124","line":28,"column":31,"nodeType":"101","messageId":"102","endLine":28,"endColumn":35},{"ruleId":"99","severity":1,"message":"125","line":28,"column":37,"nodeType":"101","messageId":"102","endLine":28,"endColumn":48},{"ruleId":"106","severity":1,"message":"111","line":51,"column":16,"nodeType":"108","messageId":"109","endLine":51,"endColumn":18},{"ruleId":"99","severity":1,"message":"126","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":18},{"ruleId":"106","severity":1,"message":"111","line":41,"column":26,"nodeType":"108","messageId":"109","endLine":41,"endColumn":28},{"ruleId":"106","severity":1,"message":"111","line":43,"column":58,"nodeType":"108","messageId":"109","endLine":43,"endColumn":60},{"ruleId":"106","severity":1,"message":"111","line":49,"column":31,"nodeType":"108","messageId":"109","endLine":49,"endColumn":33},{"ruleId":"106","severity":1,"message":"111","line":51,"column":58,"nodeType":"108","messageId":"109","endLine":51,"endColumn":60},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Flag' is defined but never used.","'markAsComplete' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'deleteTask' is assigned a value but never used.","Expected '===' and instead saw '=='.","'Link' is defined but never used.","'Query' is defined but never used.","'Mutation' is defined but never used.","'GET_TEAMS' is assigned a value but never used.","'GET_MEMBERS' is assigned a value but never used.","'GET_MEMBERS1' is assigned a value but never used.","'teamid' is defined but never used.","'setTeams' is assigned a value but never used.","'moment' is defined but never used.","'Name' is defined but never used.","'members' is defined but never used.","'project' is defined but never used.","'task' is defined but never used.","'description' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]