{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nayan\\\\OneDrive\\\\Desktop\\\\task-management-system-main\\\\src\\\\Components\\\\TeamForm.js\";\nimport React from 'react';\nimport '../Styles/form.css';\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_TEAM = gql`\n    mutation AddTeam(\n        $Name: String!,\n        $members: Number!,\n        $project:String!\n        $task: String!,\n        $description: String!,\n        ) {\n        addTeam(\n            Name: $Name,\n            members:$members\n            project: $project,\n            task: $task,\n            description: $description,\n           ) {\n            _id\n        }\n    }\n`;\n\nconst TeamForm = () => {\n  let Name, members, project, task, description;\n  return (\n    /*#__PURE__*/\n\n    /* <div className=\"container\">\n    <h4 className=\"heading\">Create Team</h4>\n    <form className=\"form\">\n     <div className=\"row-1\">\n       <div className=\"input-container\">\n         <input id=\"name\" type=\"text\" placeholder=\"Team Name\" required />\n       </div>\n       <div className=\"input-container\">\n         <input id=\"domain\" type=\"text\" placeholder=\"Total Members\" required />\n       </div>\n     </div>\n     <div className=\"input-container\">\n       <input id=\"task\" type=\"text\" placeholder=\"Project Title\" required />\n     </div>\n     <div className=\"input-container\">\n       <input\n         id=\"date\"\n         type=\"text\"\n         value=\"\"\n         placeholder=\"Task\"\n         required\n       />\n     </div>\n     <div className=\"input-container\">\n       <input\n         id=\"description\"\n         type=\"text\"\n         placeholder=\"Description\"\n         required\n       />\n     </div>\n    </form>\n    <h4 style={{textDecoration: 'none'}} className=\"btn\">Create a Team</h4>\n    </div>*/\n    _jsxDEV(Mutation, {\n      mutation: ADD_TEAM,\n      onCompleted: () => this.props.history.push('/'),\n      children: (addTeam, {\n        loading,\n        error\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"heading\",\n          children: \"Create Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: e => {\n            e.preventDefault();\n            addTeam({\n              variables: {\n                Name: Name.value,\n                members: members.value,\n                project: project.value,\n                task: task.value,\n                description: description.value\n              }\n            });\n            Name.value = \"\";\n            members.value = null;\n            project.value = \"\";\n            task.value = \"\";\n            description.value = \"\";\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"Name\",\n                type: \"text\",\n                ref: node => {\n                  Name = node;\n                },\n                placeholder: \"Team Name\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"members\",\n                type: \"int\",\n                ref: node => {\n                  members = node;\n                },\n                placeholder: \"Total members\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"project\",\n              type: \"text\",\n              ref: node => {\n                project = node;\n              },\n              placeholder: \"Project Title\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 3\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"task\",\n              type: \"text\",\n              ref: node => {\n                task = node;\n              },\n              placeholder: \"Task\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 3\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"description\",\n              type: \"text\",\n              ref: node => {\n                description = node;\n              },\n              placeholder: \"Description\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 3\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              textDecoration: 'none',\n              border: 'none'\n            },\n            type: \"submit\",\n            className: \"btn\",\n            children: \"Assign Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Error :( Please try again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = TeamForm;\nexport default TeamForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamForm\");","map":{"version":3,"sources":["C:/Users/nayan/OneDrive/Desktop/task-management-system-main/src/Components/TeamForm.js"],"names":["React","gql","Mutation","ADD_TEAM","TeamForm","Name","members","project","task","description","props","history","push","addTeam","loading","error","e","preventDefault","variables","value","node","textDecoration","border"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../Styles/form.css'\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\n\n\nconst ADD_TEAM = gql`\n    mutation AddTeam(\n        $Name: String!,\n        $members: Number!,\n        $project:String!\n        $task: String!,\n        $description: String!,\n        ) {\n        addTeam(\n            Name: $Name,\n            members:$members\n            project: $project,\n            task: $task,\n            description: $description,\n           ) {\n            _id\n        }\n    }\n`;\n\nconst TeamForm = () => {\n  let Name, members, project, task, description;\n    return (\n       /* <div className=\"container\">\n      <h4 className=\"heading\">Create Team</h4>\n      <form className=\"form\">\n        <div className=\"row-1\">\n          <div className=\"input-container\">\n            <input id=\"name\" type=\"text\" placeholder=\"Team Name\" required />\n          </div>\n          <div className=\"input-container\">\n            <input id=\"domain\" type=\"text\" placeholder=\"Total Members\" required />\n          </div>\n        </div>\n        <div className=\"input-container\">\n          <input id=\"task\" type=\"text\" placeholder=\"Project Title\" required />\n        </div>\n        <div className=\"input-container\">\n          <input\n            id=\"date\"\n            type=\"text\"\n            value=\"\"\n            placeholder=\"Task\"\n            required\n          />\n        </div>\n        <div className=\"input-container\">\n          <input\n            id=\"description\"\n            type=\"text\"\n            placeholder=\"Description\"\n            required\n          />\n        </div>\n      </form>\n      <h4 style={{textDecoration: 'none'}} className=\"btn\">Create a Team</h4>\n    </div>*/\n    <Mutation mutation={ADD_TEAM} onCompleted={() => this.props.history.push('/')}>\n    {(addTeam, { loading, error }) => (\n        <div className=\"container\">\n        <h4 className=\"heading\">Create Team</h4>\n        <form className=\"form\" onSubmit={e => {\n                        e.preventDefault();\n                        addTeam({ variables: {Name: Name.value, members:members.value, project: project.value, task: task.value, description: description.value} });\n                        Name.value = \"\";\n                        members.value=null;\n                        project.value = \"\";\n                        task.value = \"\";\n                        description.value = \"\"; \n                    }}>\n<div className=\"row-1\">\n  <div className=\"input-container\">\n    <input id=\"Name\" type=\"text\" ref={node => {Name = node;}} placeholder=\"Team Name\" required />\n  </div>\n  <div className=\"input-container\">\n    <input id=\"members\" type=\"int\" ref={node => {members = node;}} placeholder=\"Total members\" required />\n  </div>\n</div>\n<div className=\"input-container\">\n  <input id=\"project\" type=\"text\" ref={node => {project = node;}} placeholder=\"Project Title\" required />\n</div>\n<div className=\"input-container\">\n  <input id=\"task\" type=\"text\" ref={node => {task = node;}} placeholder=\"Task\" required />\n</div>\n<div className=\"input-container\">\n  <input\n    id=\"description\"\n    type=\"text\"\n    ref={node => {description = node;}}\n    placeholder=\"Description\"\n    required\n  />\n</div>\n\n\n<button style={{textDecoration: 'none', border:'none'}} type=\"submit\" className=\"btn\">Assign Task</button>\n</form>\n\n{loading && <p>Loading...</p>}\n{error && <p>Error :( Please try again</p>}\n</div>\n    )}\n</Mutation>\n    )\n}\n\nexport default TeamForm\n"]},"metadata":{},"sourceType":"module"}